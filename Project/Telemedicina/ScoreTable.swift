//
//  ScoreTable.swift
//  SiriDemo
//
//  Created by Balázs Bojrán on 2017. 04. 24..
//  Copyright © 2017. Balázs Bojrán. All rights reserved.
//

import Foundation

struct ScoreTable {
    
    private let ages : [Int] = [ 19, 29, 44, 59, 69, 79, 89 ]
    
    let male: Dictionary<Int, [Int]> = [
        95: [80,80,80,80,80,80,80],
        94: [80,80,80,80,80,80,76],
        93: [80,80,80,80,80,80,72],
        92: [80,80,80,80,80,80,69],
        91: [80,80,80,80,80,79,66],
        90: [80,80,80,80,80,78,65],
        89: [80,80,80,80,78,76,63],
        88: [80,80,79,76,75,74,61],
        87: [80,80,80,78,75,74,61],
        86: [80,80,79,77,74,72,60],
        85: [80,80,78,76,73,71,59],
        84: [80,79,78,77,72,70,58],
        83: [80,79,78,77,75,71,57],
        82: [80,77,76,74,70,68,56],
        81: [78,77,76,73,69,67,55],
        80: [77,76,75,72,68,66,54],
        79: [77,76,75,72,67,65,53],
        78: [76,75,74,71,66,64,52],
        77: [75,74,73,70,65,63,51],
        76: [74,73,73,69,64,62,50],
        75: [73,73,72,68,63,61,49],
        74: [72,72,72,67,62,60,48],
        73: [71,71,71,66,61,59,47],
        72: [70,70,70,66,60,58,46],
        71: [69,69,69,65,59,57,45],
        70: [68,68,68,64,58,56,44],
        69: [67,67,67,63,57,55,44],
        68: [66,66,66,62,56,54,43],
        67: [66,66,66,61,55,53,43],
        66: [65,65,65,60,54,52,42],
        65: [64,64,64,59,53,51,41],
        64: [63,63,63,58,52,50,41],
        63: [63,62,62,57,51,49,40],
        62: [62,62,62,56,50,48,39],
        61: [61,61,61,55,49,47,39],
        60: [60,60,60,54,49,46,38],
        59: [59,59,59,53,48,45,37],
        58: [58,58,58,52,47,44,36],
        57: [57,57,57,51,47,43,36],
        56: [56,56,56,50,46,42,35],
        55: [55,55,55,49,45,41,34],
        54: [54,54,54,48,44,40,34],
        53: [53,53,53,47,44,39,33],
        52: [52,52,52,46,43,38,32],
        51: [51,51,51,45,42,37,31],
        50: [51,50,50,44,41,36,30],
        49: [50,49,49,43,40,35,29],
        48: [50,48,48,42,39,34,28],
        47: [49,47,47,41,38,34,28],
        46: [48,46,45,40,37,33,27],
        45: [47,45,44,39,36,32,26],
        44: [47,44,43,38,35,31,26],
        43: [46,44,42,37,35,30,25],
        42: [45,43,41,36,34,30,25],
        41: [44,42,40,35,33,29,24],
        40: [43,41,39,34,32,28,23],
        39: [42,40,38,33,31,28,23],
        38: [41,39,37,32,30,27,22],
        37: [41,39,36,31,29,26,22],
        36: [40,38,35,30,28,25,21],
        35: [39,37,34,29,27,25,20],
        34: [38,36,33,28,26,24,20],
        33: [37,35,32,27,25,23,19],
        32: [36,35,32,26,24,22,18],
        31: [35,34,31,25,23,22,18],
        30: [34,33,30,24,22,21,17],
        29: [34,32,29,23,21,20,17],
        28: [33,31,28,22,20,19,16],
        27: [32,31,27,21,19,18,16],
        26: [31,30,26,20,18,17,15],
        25: [30,29,25,19,17,16,15],
        24: [29,28,24,18,16,15,14],
        23: [28,27,23,17,15,14,13],
        22: [27,26,22,16,14,14,12],
        21: [26,25,21,15,14,13,12],
        20: [25,24,20,14,13,12,11],
        19: [24,23,19,13,12,11,10],
        18: [23,22,18,12,11,10,9],
        17: [22,21,17,11,10,9,8],
        16: [21,20,16,10,9,8,7],
        15: [20,19,15,9,8,7,6],
        14: [19,18,14,8,7,6,5],
        13: [18,17,13,7,6,5,4],
        12: [17,16,12,5,4,3,2],
        11: [16,15,11,6,4,3,2],
        10: [15,14,10,5,3,2,1],
        9: [14,13,8,4,2,1,0],
        8: [13,11,7,3,1,0,0],
        7: [12,10,6,2,0,0,0],
        6: [11,8,4,1,0,0,0],
        5: [9,5,1,0,0,0,0]
    ]

    let female: Dictionary<Int, [Int]> = [
        95: [80,80,80,80,80,80,80],
        94: [80,80,80,80,80,80,80],
        93: [80,80,80,80,80,80,80],
        92: [80,80,80,80,80,80,80],
        91: [80,80,80,80,80,80,79],
        90: [80,80,80,80,80,80,78],
        89: [80,80,80,80,80,80,77],
        88: [80,80,80,80,80,80,76],
        87: [80,80,80,80,80,79,75],
        86: [80,80,80,80,80,79,74],
        85: [80,80,80,79,79,78,73],
        84: [80,80,79,79,79,78,72],
        83: [80,80,79,78,78,77,70],
        82: [80,79,78,78,78,77,69],
        81: [80,79,78,77,77,76,68],
        80: [79,78,77,77,77,75,67],
        79: [79,77,76,76,76,74,66],
        78: [78,77,76,75,75,73,65],
        77: [77,76,75,75,74,72,64],
        76: [77,75,75,74,73,70,63],
        75: [76,75,75,73,72,69,62],
        74: [76,74,74,72,72,68,61],
        73: [75,74,74,72,70,67,60],
        72: [75,73,73,70,69,66,59],
        71: [74,73,73,69,68,65,59],
        70: [73,72,72,68,67,64,58],
        69: [73,72,70,67,66,63,57],
        68: [72,70,70,66,66,62,56],
        67: [70,69,69,65,65,61,55],
        66: [70,69,69,64,64,60,54],
        65: [69,68,68,63,62,59,53],
        64: [68,67,67,62,61,58,52],
        63: [67,66,66,61,60,57,52],
        62: [66,65,65,60,59,56,50],
        61: [66,65,65,59,58,55,49],
        60: [65,64,64,58,57,54,48],
        59: [63,63,63,57,56,53,47],
        58: [62,62,62,57,55,52,46],
        57: [62,62,62,56,54,50,45],
        56: [61,61,61,55,53,49,44],
        55: [60,60,60,54,52,48,44],
        54: [59,59,59,53,50,47,43],
        53: [58,58,58,52,49,46,42],
        52: [58,57,57,52,48,45,41],
        51: [57,57,57,50,47,44,40],
        50: [56,56,56,49,46,43,39],
        49: [55,55,55,49,45,42,38],
        48: [54,54,54,48,44,40,37],
        47: [53,53,53,47,43,39,36],
        46: [52,52,52,46,42,38,35],
        45: [50,50,50,45,41,37,35],
        44: [49,49,49,44,40,36,34],
        43: [48,48,48,43,39,35,33],
        42: [47,47,47,42,38,34,32],
        41: [46,46,46,41,37,33,30],
        40: [45,45,45,41,36,32,29],
        39: [44,44,44,40,35,32,28],
        38: [44,44,44,39,34,30,27],
        37: [43,43,43,38,33,29,26],
        36: [42,42,42,37,32,28,25],
        35: [41,41,41,36,30,27,24],
        34: [40,40,40,35,29,26,24],
        33: [39,39,39,34,28,25,23],
        32: [38,38,38,33,27,24,22],
        31: [37,37,37,32,26,23,21],
        30: [36,36,36,30,25,22,20],
        29: [35,35,35,29,24,21,19],
        28: [34,34,34,28,23,20,18],
        27: [33,33,33,27,22,19,17],
        26: [32,32,32,26,21,18,16],
        25: [32,32,32,25,20,17,16],
        24: [30,30,30,24,19,17,15],
        23: [29,29,29,23,18,16,14],
        22: [28,28,28,22,17,15,13],
        21: [27,27,27,21,16,14,12],
        20: [26,26,26,20,16,13,10],
        19: [25,25,25,19,15,12,9],
        18: [24,24,24,18,14,10,8],
        17: [23,23,23,17,13,9,8],
        16: [22,22,22,16,12,9,7],
        15: [21,21,21,15,10,8,6],
        14: [20,20,20,14,9,7,5],
        13: [18,18,18,13,8,6,4],
        12: [17,17,17,12,7,5,3],
        11: [16,16,16,10,6,4,3],
        10: [15,15,15,9,5,4,2],
        9: [13,13,13,8,4,3,1],
        8: [12,12,12,6,3,2,0],
        7: [9,9,9,5,2,1,0],
        6: [8,8,8,4,1,0,0],
        5: [5,5,5,3,0,0,0]
    ]
    
    func getAgeIndex(by age: Int) -> Int {
        
        for i in 0..<ages.count {
            
            if ages[i] > age {
                
                return i > 0 ? (i - 1) : i
            }
        }
        
        return 0
    }
}
